# Generated by Django 2.0 on 2017-12-28 15:51

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bot', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('short_name', models.CharField(max_length=64, null=True, unique=True)),
                ('deadline', models.DateTimeField()),
                ('group_participants', models.ManyToManyField(to='bot.Group')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('nickname', models.CharField(max_length=64, null=True)),
                ('authority', models.CharField(choices=[('Master', 'Master'), ('Editor', 'Editor'), ('Watcher', 'Watcher')], max_length=64)),
            ],
        ),
        migrations.AlterField(
            model_name='vocabulary',
            name='word',
            field=models.CharField(max_length=64, unique=True),
        ),
        migrations.AddField(
            model_name='task',
            name='managers',
            field=models.ManyToManyField(related_name='managers', to='bot.User'),
        ),
        migrations.AddField(
            model_name='task',
            name='user_participants',
            field=models.ManyToManyField(related_name='user_participants', to='bot.User'),
        ),
    ]
